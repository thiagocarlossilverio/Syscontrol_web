<?phpclass Admin_Model_EstoqueCombustivel extends Zend_Db_Table {    protected $_name = 'estoque_combustivel';    protected $_primary = 'id';    public function init() {        $viewRenderer = Zend_Controller_Action_HelperBroker::getStaticHelper('ViewRenderer');        $viewRenderer->init();        $this->view = $viewRenderer->view;    }    public function insert(array $data) {        if (!is_array($data)) {            return false;        }     /*  if (!empty($data['data_envio'])) {            $data['data_envio'] = $this->view->ConvercaoDate('/', $data['data_envio'], 9);        }*/                if (!empty($data['valor'])) {            $data['valor'] = $this->view->LimpaNumero($data['valor']);        } else {            unset($data['valor']);        }                if (!empty($data['km'])) {            $data['km'] = $this->view->LimpaNumero($data['km']);        }                if (!empty($data['litros'])) {            $data['litros'] = $this->view->LimpaNumero($data['litros']);        }                if (empty($data['registro'])) {            unset($data['registro']);        }        $info = $this->info();        $data_insert = array_intersect_key($data, $info['metadata']);        $result = parent::insert($data_insert);        return $result;    }    public function GetDados($id) {        $sql = $this->select()                ->setIntegrityCheck(false)                ->from(array('a' => $this->_name), array("*"))                ->where("a.id = ?", $id);             if ($result = $this->fetchRow($sql)) {            $result = $result->toArray();                         if (!empty($result['data_envio'])) {                $result['data_envio'] = $this->view->ConvercaoDate('-', $result['data_envio'], '10');            }                        return $result;        } else {            return false;        }    }    public function VerificaPendencia($veiculo) {        $sql = $this->select()                ->setIntegrityCheck(false)                ->from(array('c' => $this->_name), array("id"))                ->where("c.veiculo = ?", $veiculo)                ->where("c.km_final IS NULL");        if ($result = $this->fetchRow($sql)) {            return $result->id;        } else {            return false;        }    }     public function ListaAbastecimentos($fornecedor = false, $veiculo = false, $motorista = false, $mes = false, $ano = false) {        $sql = $this->select()                ->setIntegrityCheck(false)                ->from(array('a' => $this->_name), array("*"))                ->joinLeft(array("c" => "caminhoes"), "c.id = a.veiculo", array("modelo_veiculo" => "c.modelo", "c.placa"))                ->joinLeft(array("m" => "motoristas"), "m.id = a.motorista", array("nome_motorista" => "m.nome"))                ->joinLeft(array("f" => "fornecedores_combustivel"), "f.id = a.fornecedor", array("nome_fornecedor" => "f.nome"))                //->where("a.ativo = ?", 1)                ->group("a.id");        if ($fornecedor) {            $sql->where("a.fornecedor = ?", $fornecedor);        }        if ($veiculo) {            $sql->where("a.veiculo = ?", $veiculo);        }        if ($motorista) {            $sql->where("a.motorista = ?", $motorista);        }        if ($mes) {            $sql->where("MONTH(a.data_envio)= ?", $mes);        } else {            $sql->where("MONTH(a.data_envio)= MONTH(now())");        }        if ($ano) {            $sql->where("YEAR(a.data_envio)= ?", $ano);        } else {            $sql->where("YEAR(a.data_envio)= YEAR(now())");        }        $sql->order("a.id");        if ($list = $this->fetchAll($sql)) {            return $list->toArray();        } else {            return FALSE;        }    }    public function VisualizaAbastecida($param) {        $sql = $this->select()                ->setIntegrityCheck(false)                ->from(array('a' => $this->_name), array("*"))                ->joinLeft(array("c" => "caminhoes"), "c.id = a.veiculo", array("modelo_veiculo" => "c.modelo", "c.placa"))                ->joinLeft(array("m" => "motoristas"), "m.id = a.motorista", array("nome_motorista" => "m.nome"))                ->joinLeft(array("f" => "fornecedores_combustivel"), "f.id = a.fornecedor", array("nome_fornecedor" => "f.nome"))                ->where("a.id = ?", $param);                     if ($dados = $this->fetchRow($sql)) {            return $dados->toArray();        } else {            return FALSE;        }    }             public function GetAbastecidaMotorista($motorista) {        $sql = $this->select()                    ->where("motorista = ?", $motorista)                    ->order("id DESC")                    ->limit('10');        if ($data = $this->fetchAll($sql)) {            return $data->toArray();        }    }             public function update(array $data, $where) {        $info = $this->info();        $data_insert = array_intersect_key($data, $info['metadata']);        parent::update($data_insert, $where);    }}