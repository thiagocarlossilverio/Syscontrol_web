<?php/* * To change this license header, choose License Headers in Project Properties. * To change this template file, choose Tools | Templates * and open the template in the editor. *//** * Description of Login * * @author ThiagoCarlos */class Admin_LoginController extends Zend_Controller_Action {    public function indexAction() {        // Desabilita o layout        $this->_helper->layout->disableLayout();        //$this->_helper->viewRenderer->setNoRender(TRUE);        if ($this->_request->isPost()) {            $dados = $this->_request->getPost();            if (!empty($dados['login']) && !empty($dados['senha'])) {                $authAdapter = new Zend_Auth_Adapter_DbTable(                        Zend_Registry::get('db'), 'usuarios', 'login', 'senha', 'md5(?) AND status = "1"');                $authAdapter->setIdentity($dados['login'])->setCredential($dados['senha']);                $result = $authAdapter->authenticate();                if (isset($_SERVER['HTTP_X_FORWARDED_FOR'])) {                    $IP = $_SERVER['HTTP_X_FORWARDED_FOR'];                } elseif (isset($_SERVER['HTTP_CLIENT_IP'])) {                    $IP = $_SERVER['HTTP_CLIENT_IP'];                } elseif (isset($_SERVER['HTTP_FROM '])) {                    $IP = $_SERVER['HTTP_FROM'];                } elseif (isset($_SERVER['REMOTE_ADDR'])) {                    $IP = $_SERVER['REMOTE_ADDR'];                }                $array_ip = explode(',', $IP);                if ($array_ip) {                    $IP = $array_ip[0];                }                if ($result->isValid()) {                    $model = new Admin_Model_Usuarios();                    $auth = Zend_Auth::getInstance();                    $data = $authAdapter->getResultRowObject(null, 'password');                    $auth->getStorage()->write($data);                    $user = $auth->getIdentity();                    $id_session = Zend_Session::getId();                    $model->update(array('ultimo_acesso' => date("Y-m-d H:i:s"), 'ip' => $IP, 'sessao' => $id_session), "id = " . $user->id);                    $this->_redirect('/admin/');                } else {                    $this->_helper->FlashMessenger->addMessage(array('erro' => 'Dados Inválidos'));                    $this->_redirect('admin/login');                }            } else {                $this->_helper->FlashMessenger->addMessage(array('erro' => 'Por Favor digite seu login e senha'));                $this->_redirect('admin/login');            }        }    }    public function logoutAction() {        $this->getHelper('layout')->disableLayout();        $auth = Zend_Auth::getInstance();        $auth->clearIdentity();        $this->_redirect('/admin');    }    public function requererSenhaAction() {        /* Adiciono a sessÃ£o */        $recover = new Zend_Session_Namespace("senha");        /* Adiciono a Model */        $model = new Admin_Model_Usuarios();        $this->getHelper('layout')->disableLayout();        $chave = $this->_request->getParam('chave');        $id = $this->_request->getParam('id');        if (!empty($id)) {            /* FaÃ§o uma consulta */            $row = $model->GetDados($id);            if ($row['chave'] != $chave) {                $this->_helper->FlashMessenger->addMessage(array('erro' => 'Sua chave de redefinição de senha não é mais válida!, Solicite uma nova'));                $this->_redirect("/admin/login");            }        }        if (!empty($chave) && !empty($id)) {            $recover->chave = $chave;            $recover->id = $id;            $this->redirect('/admin/login/requerer-senha');        }        if (!empty($recover->id)) {            /* Faço uma consulta */            $row = $model->GetDados($recover->id);        } else {            $this->_helper->FlashMessenger->addMessage(array('erro' => 'Ação não permitida! Solicite uma chave de redefinição de senha'));            $this->_redirect("/admin/login");        }        if ($row['chave'] != $recover->chave) {            $this->_helper->FlashMessenger->addMessage(array('erro' => 'Sua chave de redefinição de senha não é mais válida!, Solicite uma nova'));            /* Limpo a SessÃ£o */            Zend_Session::namespaceUnset("senha");            $this->_redirect("/admin/login");        }        /* Se for Post */        if ($this->_request->isPost()) {            /* armazeno em uma variavel o post */            $post = $this->_request->getPost();            /* FaÃ§o uma consulta */            $row = $model->GetDados($recover->id);            if ($row['chave'] == $recover->chave) {                if ($post['senha'] == $post['confirma_senha']) {                    /* Limpo a chave de RdefiniÃ§Ã£o de senha */                    $model->update(array('chave' => ''), "id =" . $recover->id);                    /* Atualizo a senha */                    $model->update(array('senha' => $post['senha']), "id =" . $recover->id);                    $this->_helper->FlashMessenger->addMessage(array('sucesso' => 'Senha redefenida com sucesso!'));                    $result = $model->GetDados($recover->id);                    $conteudo = array('nome' => $result['nome'], 'email' => $result['email'], 'senha' => $post['senha']);                    $assunto = "SysControl | Redefinição de senha";                    Zend_Controller_Action_HelperBroker::getStaticHelper('Emails')->Emails('', $result['email'], $assunto, $conteudo, false, 'emails/novasenha.phtml');                    /* Limpo a SessÃ£o */                    Zend_Session::namespaceUnset("senha");                    $this->_redirect("/admin/login");                } else {                    $this->_helper->FlashMessenger->addMessage(array('erro' => 'As senhas não se coincidem!'));                    $this->_redirect("/admin/requerer-senha/");                }            } else {                $this->_helper->FlashMessenger->addMessage(array('erro' => 'Sua chave de redefinição de senha não é mais válida!, Solicite uma nova'));                /* Limpo a SessÃ£o */                Zend_Session::namespaceUnset("senha");                $this->_redirect("/admin/login");            }            /* Limpo a SessÃ£o */            Zend_Session::namespaceUnset("senha");            $this->_redirect($_SERVER['HTTP_REFERER']);        }    }    public function recuperarSenhaAction() {        $this->getHelper('layout')->disableLayout();        // Verifica se existe dados do post        if ($this->_request->isPost()) {            //Adiciona a Model de empresas            $usuarios = new Admin_Model_Usuarios();            //Recupera o email digitado            $email = $this->_request->getParam("email");            if ($email == NULL) {                // Armazena o erro                $this->_helper->FlashMessenger->addMessage(array('erro' => 'Digite o e-mail!'));                // Redireciona o usuÃ¡rio para a pagina de recuperaÃ§Ã£o de senha                $this->_redirect("/admin/login");            } else {                //Verifica se existe o E-mail                $row = $usuarios->Verificaemail($email);            }            //Se existir            if ($row != false) {                // Gera a chave unica                $chave = Zend_Controller_Action_HelperBroker::getStaticHelper('Hash')->randomString(32);                if ($chave) {                    $usuarios->update(array('chave' => $chave), "id =" . $row['id']);                }                $assunto = "SysControl | Recuperação de senha";                               // Cria a mensagem                $url = "http://" . $_SERVER['HTTP_HOST'] . "/admin/login/requerer-senha/chave/" . $chave . "/id/" . $row['id'];                $array = array('nome' => $row['nome'], 'email' => $row['email'], 'url' => $url);                $res =Zend_Controller_Action_HelperBroker::getStaticHelper('Emails')->Emails('', $email, $assunto, $array, false, 'emails/requerersenha.phtml');                //Zend_Debug::dump($res);die;                $this->_helper->FlashMessenger->addMessage(array('sucesso' => 'Um email foi lhe enviado com as próximas instruções! Obrigado'));                //Redireciona o usuÃ¡rio para a pagina de login                $this->_redirect("/admin/login");            } else {                // Armazena o erro                $this->_helper->FlashMessenger->addMessage(array('erro' => 'E-mail invalido!'));                // Redireciona o usuÃ¡rio para a pagina de login                $this->_redirect("/admin/login");            }        }    }}